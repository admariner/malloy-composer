import "./flights.malloy"

// --
// Name: Carrier Table
run: carriers -> {
  select: *
}

// --
// Name: Flights Table
run: flights -> {
  select: *
}

// --
// Name: Named query
run: flights -> by_carrier

// --
// Name: Named query with filter: SFO carriers
query: sfo_carriers is flights extend {
  where: orig.code = 'SFO'
} -> by_carrier

// --
// Name: Named run: By Origin
run: flights -> by_origin

// --
// Name: Named run: By Origin with Top 3 Carrier Nested
run: flights-> by_origin + {
  nest: by_carrier +  {limit: 3}
  limit: 30
}

// --
// Name: Named run: By Carrier with Top 3 Origins Nested
run: flights-> by_carrier + {
  nest: by_origin +  {limit: 3}
  limit: 30
}

// --
// Name: Simple Barchart: Carriers by Flights
run: flights->  {
  nest: by_carrier_bar_chart is {
    group_by: carriers.nickname
    aggregate: flight_count
  }
}

// --
// Name: Barchart with two measures: Carriers by Flights
run: flights->  {
  group_by: orig.faa_region
  aggregate: flight_count
  nest: by_carrier_bar_chart is {
    group_by: carriers.nickname
    aggregate:
      flight_count
      dest_count
  }
}

// --
// Name: Barchart with two dimensions: Carriers by Flights and Distance
run: flights->  {
  nest: by_carrier_bar_chart is {
    group_by: carriers.nickname
    aggregate: flight_count
    group_by: flight_length
  }
}

// --
// Name: Line Chart Simple: flights by month
run: flights->  {
  group_by: carriers.nickname
  nest: by_month_line_chart is {
    group_by: dep_qtr is dep_time.quarter
    aggregate: flight_count
  }
}

// --
// Name: Line Chart with two dimension: Flights by Month and Length
run: flights->  {
  group_by: carriers.nickname
  nest: by_month_line_chart is {
    group_by: dep_qtr is dep_time.quarter
    aggregate: flight_count
    group_by: flight_length
  }
}

// --
// Name: Line Chart with two dimension: Flights by Month and Length
run: flights->  {
  group_by: carriers.nickname
  nest: by_month_line_chart is {
    group_by: dep_qtr is dep_time.quarter
    aggregate: flight_count
    group_by: flight_length
  }
}

// --
// Name: Lists: Origins and the list of carriers
run: flights->  {
  group_by: orig.code, orig.city
  nest: carrier_list is {
    group_by: carriers.nickname
    aggregate: flight_count
  }
  limit: 300
}

// --
// Name: List Detail: Origins and the list of carriers
// shows the count for each member of the list
run: flights->  {
  group_by: orig.code, orig.city
  nest: carrier_list_detail is {
    group_by: carriers.nickname
    aggregate: flight_count
  }
  limit: 300
}


// --
// Name: Shape Map: Carriers Origin by State
run: flights->  {
  group_by: carriers.nickname
  aggregate: flight_count
  nest: by_state_shape_map is {
    group_by: orig.state
    aggregate:
      flight_count
      dest_count
  }
}

// --
// Name: Top N of a Single Dimension
// It is often interesting to pull the topN of a
//  particular dimension.  Using pipelines
//  we can run two queries simultaneously and
//  join the results.

source: my_flights is flights extend {
  view: top_carrier_line_chart is {
      nest: c is {
        group_by: qtr is dep_time.quarter
        aggregate: flight_count
        group_by: carriers.nickname
      }
      nest: top_carriers is {
          group_by: carriers.nickname
          aggregate: flight_count
          top: 5
      }
  }
  -> {
    select: c.*
    where: c.nickname = top_carriers.nickname
  }

  view: origin_top_carriers is {
    group_by: origin, orig.city
    aggregate: flight_count
    nest: top_carrier_line_chart
  }
}
run: my_flights->origin_top_carriers


// --
// Name: Using one query as a filter for another
// Filter by carriers that fly to SFO.
query: sfo_carriers2 is flights-> {
  where: orig.code = 'SFO'
  group_by: carrier
}

run: flights -> {
  extend: {
    join_one: sfo is sfo_carriers2 on carrier = sfo.carrier
  }

  where: sfo.carrier != null
  group_by: carriers.name
  aggregate: flight_count, origin_count is orig.airport_count
}